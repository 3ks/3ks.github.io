{"pages":[{"title":"","text":"找不到这个奇怪的链接！点击返回首页","link":"/404.html"},{"title":"欢迎访问","text":"您好，欢迎访问我的博客。 博客说明一个没什么技术含量的博客，主要是一些自己的学习笔记，不对的地方请多多指教。 静态博客基于 Hexo，使用主题 icarus CDN除 html 文件外，几乎所有的静态文件都通过 CDN 加速。虽然服务器在美国，但访问速度还是不错 GitHub Action基于 GitHub Action 实现 CI/CD，分别部署到了 https://3ks.dev 和 https://3ks.github.io 一个由自己的服务器提供服务，一个由 GitHub Page 托管，其中一个挂掉，也可以访问另一个，两者内容完全一致 我是官余棚，朋友们一般叫我官二、官二代，来自重庆，农民的儿子，一个吃瓜群众 重庆师范大学计算机科学与技术 2019 届毕业生。 性格学以致用、强迫症、爱折腾、有思想、爱自由、死肥宅、内向、友善、杠精、专一 职业21 世纪的农民——码农，目前正在寻找上海地区 Golang 或云原生方向的工作。 爱好捣鼓各种有意思的事情 技能树工作其它开源贡献大部分都是一些没什么技术含量的贡献，但我不认为自己所做的事情没有意义，我把这看作是一个学习、积累的过程 开源组织侥幸混进了一些开源组织，请访问 https://github.com/3ks 查看。 Golang 基础 gobyexample-cn/gobyexample polaris1119/The-Golang-Standard-Library-by-Example unknwon/the-way-to-go_ZH_CN Golang 应用 google/go-github gin-gonic/website go-gorm/gorm.io facebookincubator/ent Golang 及云原生 servicemesher/istio-handbook servicemesher/istio-official-translation kubernetes/website istio/istio.io 计算机基础 CyC2018/CS-Notes 前端 ppoffice/hexo-theme-icarus 火箭 🚀 chrislgarry/Apollo-11 r-spacex/SpaceX-API 为什么是 3ks我的 GitHub ID 是 3ks，所以就申请了 3ks.dev 域名 为什么是 3ks 呢？很简单，因为短，对于 ID 这种东西，个人认为越短越好（深受 QQ 号荼毒） 并且 3ks 的中文发音与 tks 相同，意为谢谢。同时，谢谢 也是我的口头禅 别问我为什么不用 tks，我是不会告诉你已经被别人占用了的😒 自我评价一个资质平平的普通人 在领略全球顶级的开发者的风采、见识十几岁天才的资质后，我认识到自己：只是一个凭着爱好碰巧进入了这个行业的普通人而已 虽然世界是由天才来改变的，但天才毕竟只是极少数，普通人也有普通人要做的事，普通人也能为世界更美好贡献一份力量 联系方式 邮箱：1@linux.com GitHub：https://github/3ks","link":"/about/index.html"}],"posts":[{"title":"Linux 清理缓存","text":"万物皆文件，清空文件即清理缓存，执行下面的命令即可： 1$ sync &amp;&amp; echo 1 &gt; /proc/sys/vm/drop_caches &amp;&amp; echo 2 &gt; /proc/sys/vm/drop_caches &amp;&amp; echo 3 &gt; /proc/sys/vm/drop_caches 参考链接linux 内存清理/释放命令","link":"/2020/07/14/clean-cache/"},{"title":"Hello World","text":"欢迎 来到 Hexo! 普通文本Hello World 图片 引用 一个肮脏的国家，如果人人讲规则而不是空谈道德，最终会变成一个有人味儿的正常国家，道德自然会逐渐回归；反之，一个干净的国家，如果人人都不讲规则却大谈道德、谈高尚，天天没事儿就谈道德规范，人人大公无私，最终这个国家会堕落成为一个伪君子遍布的肮脏国家。——沙雕网友 表格 日期 天气 气温 湿度 2020-07-13 晴 33℃ 95% 2020-07-14 阴 28℃ 97% 2020-07-15 小雨 25℃ 99% 纯文本块123Hello WorldWelcome! shell 脚本片段1$ echo \"hello world\" GO 代码main.go查看源文件1234567package mainimport \"fmt\"func main() { fmt.Println(\"hello world\")} JSON 片段1234{\"title\": \"hello world\",\"themes\": \"icarus\"} YAML 片段config.yml12\"title\": \"hello world\"\"themes\": \"icarus\" 一级标题普通文本 二级标题普通文本 三级标题普通文本 四级标题普通文本","link":"/2020/07/14/hello-world/"},{"title":"CentOS 分配和禁用 swap 空间","text":"云服务的内存不够，也没有自动分配 swap 空间，导致 mysql 服务器无法启动。 此时我们可以自己分配 swap 空间作为缓存，个人感觉 swap 类似于 windows 里的虚拟内存。 分配并启用 swap获取硬盘设备路径1$ df -h 分配空间4G1$ sudo dd if=/dev/vda1 of=/swapfile count=4096 bs=1MiB DO 文档里面的 sudo fallocate -l 4G /swapfile 是错误的，评论区出人才！ 权限设置12$ sudo chmod 600 /swapfile$ sudo mkswap /swapfile 制作 swap 系统，如果成功会有一个类似下面的提示： 12Setting up swapspace version 1, size = 4194300 KiBno label, UUID=b99230bb-21af-47bc-8c37-de41129c39bf 启动 swap1$ sudo swapon /swapfile 查看结果1free -m 检查 swap 是否已经在运行、有容量了。 开机自动挂载在文件 /etc/sysctl.conf 末尾追加内容、并保存 /etc/sysctl.conf1/swapfile swap swap sw 0 0 禁用系统默认的 swap 分区某些场景下，不能使用 swap 分区，此时则应该禁用 swap 分区： 取消挂载编辑 /etc/fstab 文件，取消 swap 分区的挂载： /etc/fstab123456789# /etc/fstab# Created by anaconda on Sat Feb 29 05:30:30 2020## Accessible filesystems, by reference, are maintained under '/dev/disk'# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info#/dev/mapper/centos-root / xfs defaults 0 0UUID=666d6259-55da-4501-91fb-40b2c0b16ca2 /boot xfs defaults 0 0/dev/mapper/centos-swap swap swap defaults 0 0 swap 文件系统那一行对应的路径就是目前挂载的 swap 分区。 我们将这一行删掉，或者注释掉，保存退出。 下次系统启动时就不会自动挂载该 swap 分区。 如果不想重启系统，根据 swap 分区的路径，执行下面的命令即可立即禁用 swap 分区。 1$ swapoff /dev/mapper/centos-swap 释放分区todo 参考链接How To Add Swap on CentOS 7 CentOS 7 关闭 swap 分区","link":"/2020/07/14/malloc-swap/"},{"title":"如何为项目添加 badge","text":"我们在很多开源项目的 README 都能看到大量的徽章（badge），这些徽章大都挺漂亮的，最重要的是，通过这些徽章，我们可以快速的获取项目的状态信息，例如：开源协议、版本、单元测试覆盖率等。 那我们应该如何为自己的项目加上一些徽章呢？ markdown 插入图片我们都知道项目的 README 是一个 markdown 文件，在 markdown 内可以这样插入一张图片 1![](https://c-ssl.duitang.com/uploads/item/201610/25/20161025212336_mYJh2.thumb.300_0.jpeg) 其效果类似于这样： markdown 图片链接此外，如果我们想在点击图片后，跳转到某个页面，可以这样写： 1[![](https://c-ssl.duitang.com/uploads/item/201610/25/20161025212336_mYJh2.thumb.300_0.jpeg)](https://baidu.com) 其效果类似于这样： 点一下图片试试，看看和前一张图片的区别。 shields.io徽章其实也只是一些图片，只不过它看起来会很小，包含了一些信息，并且一般是 svg 格式的。也就是说我们只要在 README.md 中引入这种风格的图片就可以了。 现在的问题在于我们如何得到这些符合自己需要的图片呢？ 目前我们在 GitHub 上看到的很多徽章都是在 https://shields.io 这个网站生成的，该网站提供了数以百计的徽章可以选择，并且你还可以自定义徽章，这足以满意绝大部分开发者的需求。生成的图片都会有一个唯一地址，你可以直接引用该图片，或者下载图片，将其保存到项目中，再通过相对目录引用图片。无论如何，我们需要做的只是生成想要的图片、在 markdown 中引入它。 虽然有很多的徽章可以选择，但一般只需要为重要的信息添加徽章，过多的徽章会让读者无法快速提取其中的信息。至于哪些是重要的信息，这取决于具体的项目以及你自身的理解。 静态徽章预置自定义动态徽章预置自定义参考链接shields.io GitHub 项目徽章的添加和设置 如何让你的 GitHub 项目表面上更专业 为你的Github生成漂亮的徽章和进度条 Adding a workflow status badge to your repository","link":"/2020/07/17/github-badges/"},{"title":"博客切换至 Hexo","text":"最近将博客的生成器更改为了 Hexo，并使用了主题 icarus，当然，依然是静态博客。 整个迁移过程异常的顺利、简单，并且博客也比之前漂亮了很多，在这里做个笔记，算是自己的一个 icarus 入门教程吧。 静态博客摘要： 安装 Hexo 安装 icarus 配置 样式改动 404 页和 about 页 CDN 加速 GitHub Action Google Analytics main.go查看源文件1234567package mainimport \"fmt\"func main() { fmt.Println(\"hello world\")} 参考链接name","link":"/2020/07/17/go-to-hexo/"},{"title":"重读 The Way to Go","text":"The Way to Go 是一本经典的 Go 语言入门教学书籍，中文译本主要由 unknown 翻译，我已经阅读过多次了，每次都会有有一些收获，入坑 Go 正好两周年，正好最近在找工作，遂再次学习了本书（指译本，下同）的内容，并将本次的收获简单做一下记录。 阅读链接项目地址：unknwon/the-way-to-go_ZH_CN 目录：directory 国内很多 Gopher 入门的第一本书就是 The Way to Go，据我所知，很多网站都能找到本书的内容。 如果你也对这本书感兴趣的话，我只推荐你通过上面的链接进行阅读。The Way to Go 这本书已经做出过多次修订，译文同样需要更新，在这方面，阅读译本原文可以获得最好的体验。 main.go查看源文件1234567package mainimport \"fmt\"func main() { fmt.Println(\"hello world\")}","link":"/2020/07/17/the-way-to-go/"}],"tags":[{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"CentOS","slug":"CentOS","link":"/tags/CentOS/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"cache","slug":"cache","link":"/tags/cache/"},{"name":"swap","slug":"swap","link":"/tags/swap/"},{"name":"Badge","slug":"Badge","link":"/tags/Badge/"},{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"blog","slug":"blog","link":"/tags/blog/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"icarus","slug":"icarus","link":"/tags/icarus/"},{"name":"CDN","slug":"CDN","link":"/tags/CDN/"},{"name":"GitHub Page","slug":"GitHub-Page","link":"/tags/GitHub-Page/"},{"name":"GitHub Action","slug":"GitHub-Action","link":"/tags/GitHub-Action/"},{"name":"go","slug":"go","link":"/tags/go/"}],"categories":[{"name":"Linux","slug":"Linux","link":"/categories/Linux/"},{"name":"Github","slug":"Github","link":"/categories/Github/"},{"name":"CentOS","slug":"Linux/CentOS","link":"/categories/Linux/CentOS/"},{"name":"blog","slug":"blog","link":"/categories/blog/"},{"name":"go","slug":"go","link":"/categories/go/"},{"name":"Badge","slug":"Github/Badge","link":"/categories/Github/Badge/"},{"name":"cache","slug":"Linux/CentOS/cache","link":"/categories/Linux/CentOS/cache/"},{"name":"hexo","slug":"blog/hexo","link":"/categories/blog/hexo/"},{"name":"the-way-to-go","slug":"go/the-way-to-go","link":"/categories/go/the-way-to-go/"},{"name":"swap","slug":"Linux/CentOS/swap","link":"/categories/Linux/CentOS/swap/"},{"name":"icarus","slug":"blog/hexo/icarus","link":"/categories/blog/hexo/icarus/"}]}